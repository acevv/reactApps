{"ast":null,"code":"var _jsxFileName = \"/Users/acev/react/tasker2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_EXPENSES = [{\n  id: \"e1\",\n  title: \"Toilet Paper\",\n  amount: 94,\n  date: new Date(2020, 7, 14)\n}, {\n  id: \"e2\",\n  title: \"New TV\",\n  amount: 799,\n  date: new Date(2021, 2, 12)\n}, {\n  id: \"e3\",\n  title: \"Car Insurance\",\n  amount: 294,\n  date: new Date(2019, 2, 28)\n}, {\n  id: \"e4\",\n  title: \"New Desk (Wooden)\",\n  amount: 450,\n  date: new Date(202, 5, 12)\n}];\n\nconst App = () => {\n  _s();\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  const filterExpenses = selectedYear => {\n    const result = expenses.filter(checkYear);\n\n    function checkYear(item) {\n      console.log(item.date.getFullYear(), \"<-inside CHECK YEAR!\");\n\n      if (item.date.getFullYear() === selectedYear) {\n        return item;\n      }\n    }\n\n    console.log(selectedYear); // console.log(result);\n    // console.log(selectedYear);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expenses,\n      filterExpenses: filterExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vWte2SAXNm+1bDonaLQzZSzOmNc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Expenses","NewExpense","DUMMY_EXPENSES","id","title","amount","date","Date","App","expenses","setExpenses","addExpenseHandler","expense","prevExpenses","filterExpenses","selectedYear","result","filter","checkYear","item","console","log","getFullYear"],"sources":["/Users/acev/react/tasker2/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294,\n    date: new Date(2019, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(202, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  const filterExpenses = (selectedYear) => {\n    const result = expenses.filter(checkYear);\n    function checkYear(item) {\n      console.log(item.date.getFullYear(), \"<-inside CHECK YEAR!\");\n      if (item.date.getFullYear() === selectedYear) {\n        return item;\n      }\n    }\n    console.log(selectedYear);\n    // console.log(result);\n    // console.log(selectedYear);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} filterExpenses={filterExpenses} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;AAEA,MAAMC,cAAc,GAAG,CACrB;EACEC,EAAE,EAAE,IADN;EAEEC,KAAK,EAAE,cAFT;EAGEC,MAAM,EAAE,EAHV;EAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CADqB,EAOrB;EACEJ,EAAE,EAAE,IADN;EAEEC,KAAK,EAAE,QAFT;EAGEC,MAAM,EAAE,GAHV;EAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAPqB,EAarB;EACEJ,EAAE,EAAE,IADN;EAEEC,KAAK,EAAE,eAFT;EAGEC,MAAM,EAAE,GAHV;EAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAbqB,EAmBrB;EACEJ,EAAE,EAAE,IADN;EAEEC,KAAK,EAAE,mBAFT;EAGEC,MAAM,EAAE,GAHV;EAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,GAAT,EAAc,CAAd,EAAiB,EAAjB;AAJR,CAnBqB,CAAvB;;AA2BA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACG,cAAD,CAAxC;;EAEA,MAAMS,iBAAiB,GAAIC,OAAD,IAAa;IACrCF,WAAW,CAAEG,YAAD,IAAkB;MAC5B,OAAO,CAACD,OAAD,EAAU,GAAGC,YAAb,CAAP;IACD,CAFU,CAAX;EAGD,CAJD;;EAMA,MAAMC,cAAc,GAAIC,YAAD,IAAkB;IACvC,MAAMC,MAAM,GAAGP,QAAQ,CAACQ,MAAT,CAAgBC,SAAhB,CAAf;;IACA,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;MACvBC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACb,IAAL,CAAUgB,WAAV,EAAZ,EAAqC,sBAArC;;MACA,IAAIH,IAAI,CAACb,IAAL,CAAUgB,WAAV,OAA4BP,YAAhC,EAA8C;QAC5C,OAAOI,IAAP;MACD;IACF;;IACDC,OAAO,CAACC,GAAR,CAAYN,YAAZ,EARuC,CASvC;IACA;EACD,CAXD;;EAaA,oBACE;IAAA,wBACE,QAAC,UAAD;MAAY,YAAY,EAAEJ;IAA1B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,KAAK,EAAEF,QAAjB;MAA2B,cAAc,EAAEK;IAA3C;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CA5BD;;GAAMN,G;;KAAAA,G;AA8BN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}